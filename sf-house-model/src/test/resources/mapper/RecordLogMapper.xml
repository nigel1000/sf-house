<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sf.house.model.record.dao.RecordLogMapper">

    <!--<resultMap id="RecordLogMap" type="sf.house.model.record.RecordLog">-->
    <!--<result column="id" property="id"/>-->
    <!--<result column="biz_id" property="bizId"/>-->
    <!--<result column="module_type" property="moduleType"/>-->
    <!--<result column="module_type_name" property="moduleTypeName"/>-->
    <!--<result column="biz_type" property="bizType"/>-->
    <!--<result column="biz_type_name" property="bizTypeName"/>-->
    <!--<result column="before_value" property="beforeValue"/>-->
    <!--<result column="update_value" property="updateValue"/>-->
    <!--<result column="after_value" property="afterValue"/>-->
    <!--<result column="extra" property="extra"/>-->
    <!--<result column="operate_remark" property="operateRemark"/>-->
    <!--<result column="operator_id" property="operatorId"/>-->
    <!--<result column="operator_name" property="operatorName"/>-->
    <!--<result column="create_at" property="createAt"/>-->
    <!--<result column="update_at" property="updateAt"/>-->
    <!--</resultMap>-->

    <sql id="tb">
        record_log
    </sql>

    <sql id="cols_all">
        id,
        biz_id,
        module_type,
        module_type_name,
        biz_type,
        biz_type_name,
        before_value,
        update_value,
        after_value,
        extra,
        operate_remark,
        operator_id,
        operator_name,
        create_at,
        update_at
    </sql>

    <sql id="vals_all">
        <if test="item.id != null ">#{item.id},</if>
        <if test="item.id == null ">null,</if>
        #{item.bizId},
        #{item.moduleType},
        #{item.moduleTypeName},
        #{item.bizType},
        #{item.bizTypeName},
        #{item.beforeValue},
        #{item.updateValue},
        #{item.afterValue},
        #{item.extra},
        #{item.operateRemark},
        #{item.operatorId},
        #{item.operatorName},
        now(),
        now()
    </sql>

    <sql id="cols_dynamic">
        id,
        <if test="item.bizId != null ">biz_id,</if>
        <if test="item.moduleType != null ">module_type,</if>
        <if test="item.moduleTypeName != null ">module_type_name,</if>
        <if test="item.bizType != null ">biz_type,</if>
        <if test="item.bizTypeName != null ">biz_type_name,</if>
        <if test="item.beforeValue != null ">before_value,</if>
        <if test="item.updateValue != null ">update_value,</if>
        <if test="item.afterValue != null ">after_value,</if>
        <if test="item.extra != null ">extra,</if>
        <if test="item.operateRemark != null ">operate_remark,</if>
        <if test="item.operatorId != null ">operator_id,</if>
        <if test="item.operatorName != null ">operator_name,</if>
        create_at,
        update_at
    </sql>

    <sql id="vals_dynamic">
        <if test="item.id != null ">#{item.id},</if>
        <if test="item.id == null ">null,</if>
        <if test="item.bizId != null ">#{item.bizId},</if>
        <if test="item.moduleType != null ">#{item.moduleType},</if>
        <if test="item.moduleTypeName != null ">#{item.moduleTypeName},</if>
        <if test="item.bizType != null ">#{item.bizType},</if>
        <if test="item.bizTypeName != null ">#{item.bizTypeName},</if>
        <if test="item.beforeValue != null ">#{item.beforeValue},</if>
        <if test="item.updateValue != null ">#{item.updateValue},</if>
        <if test="item.afterValue != null ">#{item.afterValue},</if>
        <if test="item.extra != null ">#{item.extra},</if>
        <if test="item.operateRemark != null ">#{item.operateRemark},</if>
        <if test="item.operatorId != null ">#{item.operatorId},</if>
        <if test="item.operatorName != null ">#{item.operatorName},</if>
        <if test="item.createAt != null ">#{item.createAt},</if>
        <if test="item.createAt == null ">now(),</if>
        <if test="item.updateAt != null ">#{item.updateAt}</if>
        <if test="item.updateAt == null ">now()</if>
    </sql>

    <sql id="condition_dynamic">
        <if test="item.bizId != null ">and biz_id = #{item.bizId}</if>
        <if test="item.moduleType != null ">and module_type = #{item.moduleType}</if>
        <if test="item.moduleTypeName != null ">and module_type_name = #{item.moduleTypeName}</if>
        <if test="item.bizType != null ">and biz_type = #{item.bizType}</if>
        <if test="item.bizTypeName != null ">and biz_type_name = #{item.bizTypeName}</if>
        <if test="item.beforeValue != null ">and before_value = #{item.beforeValue}</if>
        <if test="item.updateValue != null ">and update_value = #{item.updateValue}</if>
        <if test="item.afterValue != null ">and after_value = #{item.afterValue}</if>
        <if test="item.extra != null ">and extra = #{item.extra}</if>
        <if test="item.operateRemark != null ">and operate_remark = #{item.operateRemark}</if>
        <if test="item.operatorId != null ">and operator_id = #{item.operatorId}</if>
        <if test="item.operatorName != null ">and operator_name = #{item.operatorName}</if>
    </sql>

    <sql id="set_dynamic">
        <if test="item.bizId !=null">biz_id = #{item.bizId},</if>
        <if test="item.moduleType !=null">module_type = #{item.moduleType},</if>
        <if test="item.moduleTypeName !=null">module_type_name = #{item.moduleTypeName},</if>
        <if test="item.bizType !=null">biz_type = #{item.bizType},</if>
        <if test="item.bizTypeName !=null">biz_type_name = #{item.bizTypeName},</if>
        <if test="item.beforeValue !=null">before_value = #{item.beforeValue},</if>
        <if test="item.updateValue !=null">update_value = #{item.updateValue},</if>
        <if test="item.afterValue !=null">after_value = #{item.afterValue},</if>
        <if test="item.extra !=null">extra = #{item.extra},</if>
        <if test="item.operateRemark !=null">operate_remark = #{item.operateRemark},</if>
        <if test="item.operatorId !=null">operator_id = #{item.operatorId},</if>
        <if test="item.operatorName !=null">operator_name = #{item.operatorName},</if>
    </sql>

    <insert id="create" parameterType="sf.house.model.record.RecordLog" keyProperty="item.id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_dynamic"/>)
        VALUES
        (<include refid="vals_dynamic"/>)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_all"/>)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (<include refid="vals_all"/>)
        </foreach>
    </insert>

    <update id="update" parameterType="sf.house.model.record.RecordLog">
        UPDATE
        <include refid="tb"/>
        <set>
            <include refid="set_dynamic"/>
        </set>
        WHERE id=#{item.id}
    </update>

    <select id="list" parameterType="map" resultType="sf.house.model.record.RecordLog">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="condition_dynamic"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultType="sf.house.model.record.RecordLog">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="condition_dynamic"/>
        </where>
        <if test="item.sortBy != null">order by ${item.sortBy}</if>
        <if test="item.offset != null and item.limit != null">limit #{item.offset}, #{item.limit}</if>
    </select>

    <select id="count" parameterType="map" resultType="int">
        SELECT
        count(*)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="condition_dynamic"/>
        </where>
    </select>

    <select id="load" parameterType="long" resultType="sf.house.model.record.RecordLog">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{item.id}
    </select>

    <select id="loads" resultType="sf.house.model.record.RecordLog" parameterType="list">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" item="id" index="index" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{item.id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>

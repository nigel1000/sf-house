<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sf.house.mybatis.test.dao.TestMapper">

    <!--<resultMap id="TestMap" type="sf.house.mybatis.test.domain.Test">-->
    <!--<result column="id" property="id"/>-->
    <!--<result column="string_type" property="stringType"/>-->
    <!--<result column="char_type" property="charType"/>-->
    <!--<result column="mediumtext_type" property="mediumtextType"/>-->
    <!--<result column="datetime_type" property="datetimeType"/>-->
    <!--<result column="tinyint_type" property="tinyintType"/>-->
    <!--<result column="smallint_type" property="smallintType"/>-->
    <!--<result column="mediumint_type" property="mediumintType"/>-->
    <!--<result column="int_type" property="intType"/>-->
    <!--<result column="bigint_type" property="bigintType"/>-->
    <!--<result column="double_type" property="doubleType"/>-->
    <!--<result column="decimal_type" property="decimalType"/>-->
    <!--<result column="bit_type" property="bitType"/>-->
    <!--<result column="date_type" property="dateType"/>-->
    <!--<result column="create_at" property="createAt"/>-->
    <!--<result column="update_at" property="updateAt"/>-->
    <!--</resultMap>-->

    <sql id="tb">
       test
    </sql>

    <sql id="cols_all">
       id,
       string_type,
       char_type,
       mediumtext_type,
       datetime_type,
       tinyint_type,
       smallint_type,
       mediumint_type,
       int_type,
       bigint_type,
       double_type,
       decimal_type,
       bit_type,
       date_type,
       create_at,
       update_at
    </sql>

    <sql id="vals">
        <if test="id != null ">#{id},</if>
        <if test="id == null ">null,</if>
        #{stringType},
        #{charType},
        #{mediumtextType},
        #{datetimeType},
        #{tinyintType},
        #{smallintType},
        #{mediumintType},
        #{intType},
        #{bigintType},
        #{doubleType},
        #{decimalType},
        #{bitType},
        #{dateType},
        now(),
        now()
    </sql>

    <sql id="vals_list">
        (
        <if test="item.id != null ">#{item.id},</if>
        <if test="item.id == null ">null,</if>
        #{item.stringType},
        #{item.charType},
        #{item.mediumtextType},
        #{item.datetimeType},
        #{item.tinyintType},
        #{item.smallintType},
        #{item.mediumintType},
        #{item.intType},
        #{item.bigintType},
        #{item.doubleType},
        #{item.decimalType},
        #{item.bitType},
        #{item.dateType},
        now(),
        now()
        )
    </sql>

    <sql id="dynamic_condition">
        <if test="stringType != null ">and string_type = #{stringType}</if>
        <if test="charType != null ">and char_type = #{charType}</if>
        <if test="mediumtextType != null ">and mediumtext_type = #{mediumtextType}</if>
        <if test="datetimeType != null ">and datetime_type = #{datetimeType}</if>
        <if test="tinyintType != null ">and tinyint_type = #{tinyintType}</if>
        <if test="smallintType != null ">and smallint_type = #{smallintType}</if>
        <if test="mediumintType != null ">and mediumint_type = #{mediumintType}</if>
        <if test="intType != null ">and int_type = #{intType}</if>
        <if test="bigintType != null ">and bigint_type = #{bigintType}</if>
        <if test="doubleType != null ">and double_type = #{doubleType}</if>
        <if test="decimalType != null ">and decimal_type = #{decimalType}</if>
        <if test="bitType != null ">and bit_type = #{bitType}</if>
        <if test="dateType != null ">and date_type = #{dateType}</if>
    </sql>

    <sql id="set">
        <if test="stringType !=null">string_type = #{stringType},</if>
        <if test="charType !=null">char_type = #{charType},</if>
        <if test="mediumtextType !=null">mediumtext_type = #{mediumtextType},</if>
        <if test="datetimeType !=null">datetime_type = #{datetimeType},</if>
        <if test="tinyintType !=null">tinyint_type = #{tinyintType},</if>
        <if test="smallintType !=null">smallint_type = #{smallintType},</if>
        <if test="mediumintType !=null">mediumint_type = #{mediumintType},</if>
        <if test="intType !=null">int_type = #{intType},</if>
        <if test="bigintType !=null">bigint_type = #{bigintType},</if>
        <if test="doubleType !=null">double_type = #{doubleType},</if>
        <if test="decimalType !=null">decimal_type = #{decimalType},</if>
        <if test="bitType !=null">bit_type = #{bitType},</if>
        <if test="dateType !=null">date_type = #{dateType},</if>
    </sql>

    <insert id="create" parameterType="sf.house.mybatis.test.domain.Test" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (
        <include refid="cols_all"/>
        )
        VALUES
        (
        <include refid="vals"/>
        )
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (
        <include refid="cols_all"/>
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            <include refid="vals_list"/>
        </foreach>
    </insert>

    <update id="update" parameterType="sf.house.mybatis.test.domain.Test">
        UPDATE
        <include refid="tb"/>
        <set>
            <include refid="set"/>
        </set>
        WHERE id=#{id}
    </update>

    <select id="list" parameterType="map" resultType="sf.house.mybatis.test.domain.Test">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="dynamic_condition"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultType="sf.house.mybatis.test.domain.Test">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="dynamic_condition"/>
        </where>
        <if test="orderBy != null">order by #{orderBy}</if>
        <if test="offset != null and limit != null">limit #{offset}, #{limit}</if>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT
        count(*)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="dynamic_condition"/>
        </where>
    </select>

    <select id="load" parameterType="long" resultType="sf.house.mybatis.test.domain.Test">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="loads" resultType="sf.house.mybatis.test.domain.Test" parameterType="list">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
